<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- 开启注解扫描 -->
    <context:component-scan base-package="com.baomidou.kisso.springmvc" />
    <!-- 引入jdbc配置文件 -->
    <context:property-placeholder location="classpath:properties/*.properties" />

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc_driverClassName}"></property>
        <property name="jdbcUrl" value="${jdbc_url}"></property>
        <property name="user" value="${jdbc_username}"></property>
        <property name="password" value="${jdbc_password}"></property>
        <property name="acquireRetryDelay" value="1000"></property>
        <property name="acquireRetryAttempts" value="60"></property>
        <property name="breakAfterAcquireFailure" value="false"></property>
        <!--连接池中保留的最大连接数。默认值: 15 -->
        <property name="maxPoolSize" value="10" />
        <!-- 连接池中保留的最小连接数，默认为：3 -->
        <property name="minPoolSize" value="0" />
        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
        <property name="initialPoolSize" value="10" />
    </bean>

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource" p:configLocation="classpath:spring/spring-mybatis.xml"
          p:mapperLocations="classpath:mapper/*.xml" /><!-- configLocation为mybatis属性
		mapperLocations为所有mapper -->

    <!-- spring与mybatis整合配置，扫描所有dao ,生成与DAO类相同名字的bean（除了首字母小写） -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="com.baomidou.kisso.springmvc.dao" p:sqlSessionFactoryBeanName="sqlSessionFactory" />

    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource" />
    <!-- 对所有以add/update/insert/close/del开头的方法都增加默认的事物 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="create*" propagation="REQUIRED"
                       rollback-for="Excepiton" />
            <tx:method name="update*" propagation="REQUIRED"
                       rollback-for="Excepiton" />
            <tx:method name="insert*" propagation="REQUIRED"
                       rollback-for="Excepiton" />
            <tx:method name="close*" propagation="REQUIRED"
                       rollback-for="Excepiton" />
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Excepiton" />
            <tx:method name="save*" propagation="REQUIRED"
                       rollback-for="Excepiton" />
            <tx:method name="*Tran" propagation="REQUIRED"
                       rollback-for="Excepiton" />
            <!-- <tx:method name="reduceStore" propagation="REQUIRED" isolation="READ_COMMITTED" -->
            <!-- <tx:method name="reduceStore" propagation="REQUIRED" rollback-for="Excepiton"
                /> -->
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="serviceMethod"
                      expression="execution(* com.baomidou.kisso.springmvc.service.*.*(..))" />
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
    </aop:config>

    <!-- redis工具 -->
    <bean id="redisUtil" class="com.baomidou.kisso.springmvc.utils.RedisUtil">
        <property name="maxTotal" value="${redis.init.maxTotal}" />
        <property name="maxIdle" value="${redis.init.maxIdle}" />
        <property name="minIdle" value="${redis.init.minIdle}" />
        <property name="holed" value="${redis.init.maxWaitMillis}" />
        <property name="port" value="${redis.init.port}" />
        <property name="host" value="${redis.init.host}" />
        <property name="timeout" value="${redis.init.timeout}" />
        <property name="password" value="${redis.init.psw}" />
        <property name="DB" value="${redis.init.DB}" />
    </bean>

</beans>